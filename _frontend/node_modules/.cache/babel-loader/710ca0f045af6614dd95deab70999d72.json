{"ast":null,"code":"var _jsxFileName = \"/home/rackham/dev/toggle/frontend/src/Components/AddPost.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport UploadFile from \"./UploadFile\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPresignedUrl } from \"../actions/feedAction\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = _ref => {\n  _s();\n\n  let {\n    toggle\n  } = _ref;\n  const presignedUrlResponse = useSelector(state => state.presignedUrl);\n  const dispatch = useDispatch();\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [type, setType] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [content, setContent] = useState(\"\");\n\n  const _typeHandler = _type => {\n    setType(_type);\n  };\n\n  const presignedUrl = useMemo(() => {\n    if (presignedUrlResponse.success) {\n      return presignedUrlResponse.data.presigned;\n    }\n\n    return null;\n  }, [presignedUrlResponse]);\n\n  const _handleChange = async file => {\n    setFile(file);\n\n    if (!presignedUrl) {\n      const params = {\n        fileName: file.name,\n        fileType: file.type,\n        type: \"memory\"\n      };\n      dispatch(getPresignedUrl(params));\n    }\n  };\n\n  const _handleCheckbox = () => {\n    setIsPrivate(!isPrivate);\n  };\n\n  const _handleSubmit = async () => {\n    try {\n      let params = {\n        isPrivate\n      };\n\n      if (presignedUrl) {\n        params[\"image\"] = {\n          url: presignedUrl,\n          caption: \"\"\n        };\n        const reqObj = {\n          url: presignedUrl,\n          method: \"PUT\",\n          body: file\n        };\n        await axios(reqObj);\n      } else {\n        params[\"content\"] = content;\n      }\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    toggle: toggle,\n    children: type.length > 0 ? /*#__PURE__*/_jsxDEV(PostContainer, {\n      children: [type !== \"memory\" ? /*#__PURE__*/_jsxDEV(TextArea, {\n        value: content,\n        onChange: e => {\n          setContent(e.target.value);\n        },\n        rows: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }, this) : /*#__PURE__*/_jsxDEV(UploadFile, {\n        image: file,\n        cb: _handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: isPrivate,\n          onChange: _handleCheckbox,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Private\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 4\n      }, this), toggle ? /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: _handleSubmit,\n          toggle: toggle,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Action, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => _typeHandler(\"post\"),\n        toggle: toggle,\n        children: \"Add Your Thought\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => _typeHandler(\"memory\"),\n        toggle: toggle,\n        children: \"Add Your Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 2\n  }, this);\n};\n\n_s(AddPost, \"Z1plRONx7N96wxr1NW0+aVyu/Gg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AddPost;\nconst Container = styled.div`\n\tposition: absolute;\n\tright: ${props => props.toggle ? \"80px\" : \"50px\"};\n\tbottom: ${props => props.toggle ? \"80px\" : \"50px\"};\n\topacity: ${props => props.toggle ? 1 : 0};\n\twidth: ${props => props.toggle ? \"500px\" : \"0px\"};\n\tmin-height: ${props => props.toggle ? \"200px\" : \"0px\"};\n\tmax-height: 400px;\n\tbackground-color: #ffffffa3;\n\tborder-radius: 10px;\n\ttransform-origin: bottom right;\n\ttransition: all 0.4s linear;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 20px;\n`;\n_c2 = Container;\nconst Action = styled.div`\n\twidth: 100%;\n\tmin-height: inherit;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tgap: 20px;\n`;\n_c3 = Action;\nconst Button = styled.button`\n\tborder: none;\n\theight: 48px;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\ttransition-delay: 200s;\n\topacity: ${props => props.toggle ? 1 : 0};\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n\tdisplay: ${props => props.toggle ? \"block\" : \"none\"}\n`;\n_c4 = Button;\nconst PostContainer = styled.div`\n\twidth: 100%;\n\tmin-height: inherit;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n`;\n_c5 = PostContainer;\nconst Checkbox = styled.input`\n\n`;\n_c6 = Checkbox;\nconst Label = styled.label`\n\tcolor: #212121;\n`;\n_c7 = Label;\nconst InputWrapper = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tgap: 10px;\n`;\n_c8 = InputWrapper;\nconst TextArea = styled.textarea`\n\twidth: 100%;\n\tborder: none;\n\tborder-radius: 10px;\n\tresize: none;\n\tflex: 1;\n\tpadding: 20px;\n\tbackground-color: #636e722e;\n\tcolor: #212121;\n\tfont-weight: 500;\n`;\n_c9 = TextArea;\nconst ButtonWrapper = styled.div`\n\twidth: 100%;\n`;\n_c10 = ButtonWrapper;\nexport default AddPost;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"AddPost\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Action\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"PostContainer\");\n$RefreshReg$(_c6, \"Checkbox\");\n$RefreshReg$(_c7, \"Label\");\n$RefreshReg$(_c8, \"InputWrapper\");\n$RefreshReg$(_c9, \"TextArea\");\n$RefreshReg$(_c10, \"ButtonWrapper\");","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/Components/AddPost.tsx"],"names":["React","useMemo","useState","styled","UploadFile","useSelector","useDispatch","getPresignedUrl","axios","AddPost","toggle","presignedUrlResponse","state","presignedUrl","dispatch","isPrivate","setIsPrivate","type","setType","file","setFile","content","setContent","_typeHandler","_type","success","data","presigned","_handleChange","params","fileName","name","fileType","_handleCheckbox","_handleSubmit","url","caption","reqObj","method","body","error","length","e","target","value","Container","div","props","Action","Button","button","PostContainer","Checkbox","input","Label","label","InputWrapper","TextArea","textarea","ButtonWrapper"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport UploadFile from \"./UploadFile\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../store\";\nimport { StateType } from \"../interfacesAndTypes/TState\";\nimport { getPresignedUrl } from \"../actions/feedAction\";\nimport { PostParamsType } from  \"../interfacesAndTypes/RequestParams\";\nimport axios, { AxiosRequestConfig } from \"axios\";\n\ntype Props = {\n\ttoggle: boolean\n}\n\ntype ToggleProps = {\n\ttoggle?: boolean\n}\n\nconst AddPost = ({toggle}: Props) => {\n\tconst presignedUrlResponse: StateType = useSelector((state: RootState)=> state.presignedUrl);\n\tconst dispatch = useDispatch();\n\tconst [isPrivate, setIsPrivate] = useState<boolean>(false);\n\tconst [type, setType] = useState<string>(\"\")\n\tconst [file, setFile] = useState<File | null>(null)\n\tconst [content, setContent] = useState<string>(\"\");\n\tconst _typeHandler = (_type:string)=>{\n\t\tsetType(_type);\n\t}\n\n  \n\n   const presignedUrl = useMemo(()=>{\n\t\tif(presignedUrlResponse.success){\n\t\t\treturn presignedUrlResponse.data.presigned;\n\t\t}\n\t\treturn null;\n   },[presignedUrlResponse])\n\n    const _handleChange = async (file:File)=>{\n\t   setFile(file);\n\t   if(!presignedUrl){\n\t\t     const params = {\n\t\t\t\tfileName: file.name,\n\t\t\t\tfileType: file.type,\n\t\t\t\ttype: \"memory\"\n\t\t\t }\n\t\t\tdispatch<any>(getPresignedUrl(params))\n\t   }\n   }\n\n   const _handleCheckbox = ()=>{\n\n\tsetIsPrivate(!isPrivate);\n\n   }\n\n   const _handleSubmit = async ()=>{\n\t   try {\n\t\t   let params: PostParamsType = {\n\t\t\t   isPrivate\n\t\t   }\n\t\t   if(presignedUrl){\n\t\t\t   params[\"image\"] = {\n\t\t\t\t   url: presignedUrl,\n\t\t\t\t   caption: \"\"\n\t\t\t   }\n\n\t\t\t   const reqObj: AxiosRequestConfig= {\n\t\t\t\t   url: presignedUrl,\n\t\t\t\t   method: \"PUT\",\n\t\t\t\t   body: file\n\t\t\t   }\n\t\t\t   await axios(reqObj);\n\t\t   }else{\n\t\t\t   params[\"content\"] = content;\n\t\t   }\n\t   } catch (error) {\n\t\t   \n\t   }\n   }\n  return (\n\t<Container toggle={toggle}>\n\t\t{type.length > 0 ? <PostContainer>\n\t\t\t{\n\t\t\ttype!== \"memory\" ? \n\t\t\t<TextArea value={content} onChange={(e)=>{ setContent(e.target.value)}} rows={5} /> \n\t\t\t:<UploadFile image={file} cb={_handleChange} />\n\t\t\t}\n\t\t\t<InputWrapper>\n\t\t\t\t<Checkbox checked={isPrivate} onChange={_handleCheckbox} type=\"checkbox\" /> \n\t\t\t\t<Label>Private</Label>\n\t\t\t</InputWrapper>\n\t\t\t\n\t\t\t{toggle ? <ButtonWrapper>\n\t\t\t\t<Button onClick={_handleSubmit} toggle={toggle}>Submit</Button>\n\t\t\t</ButtonWrapper> : null }\n\t\t</PostContainer>: <Action>\n\t\t\t <Button onClick={()=> _typeHandler(\"post\")} toggle={toggle}>Add Your Thought</Button>\n\t\t\t <Button onClick={()=> _typeHandler(\"memory\")} toggle={toggle}>Add Your Memory</Button>\n\t\t\t</Action>}\n\t</Container>\n  )\n}\n\nconst Container = styled.div<ToggleProps>`\n\tposition: absolute;\n\tright: ${props => props.toggle ? \"80px\": \"50px\"};\n\tbottom: ${props => props.toggle ? \"80px\": \"50px\"};\n\topacity: ${props => props.toggle ? 1: 0};\n\twidth: ${props => props.toggle ? \"500px\": \"0px\"};\n\tmin-height: ${props => props.toggle ? \"200px\": \"0px\"};\n\tmax-height: 400px;\n\tbackground-color: #ffffffa3;\n\tborder-radius: 10px;\n\ttransform-origin: bottom right;\n\ttransition: all 0.4s linear;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 20px;\n`;\n\nconst Action = styled.div`\n\twidth: 100%;\n\tmin-height: inherit;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tgap: 20px;\n`\n\nconst Button = styled.button<ToggleProps>`\n\tborder: none;\n\theight: 48px;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\ttransition-delay: 200s;\n\topacity: ${props => props.toggle ? 1: 0};\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n\tdisplay: ${props=> props.toggle ? \"block\": \"none\"}\n`\n\n\nconst PostContainer = styled.div`\n\twidth: 100%;\n\tmin-height: inherit;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n`;\n\nconst Checkbox = styled.input`\n\n`;\n\nconst Label = styled.label`\n\tcolor: #212121;\n`\n\nconst InputWrapper = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tgap: 10px;\n`\n\nconst TextArea = styled.textarea`\n\twidth: 100%;\n\tborder: none;\n\tborder-radius: 10px;\n\tresize: none;\n\tflex: 1;\n\tpadding: 20px;\n\tbackground-color: #636e722e;\n\tcolor: #212121;\n\tfont-weight: 500;\n`\n\nconst ButtonWrapper = styled.div`\n\twidth: 100%;\n`\n\nexport default AddPost"]},"metadata":{},"sourceType":"module"}