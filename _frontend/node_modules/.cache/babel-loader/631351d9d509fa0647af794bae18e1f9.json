{"ast":null,"code":"var _jsxFileName = \"/home/rackham/dev/toggle/frontend/src/Components/AddPost.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport UploadFile from \"./UploadFile\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getPresignedUrl } from \"../actions/feedAction\";\nimport { createPost } from \"../actions/feedAction\";\nimport { createPostReset } from \"../actions/feedAction\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = _ref => {\n  _s();\n\n  let {\n    toggle\n  } = _ref;\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const presignedUrlResponse = useSelector(state => state.presignedUrl);\n  const [error, setError] = useState({\n    msg: \"\",\n    hasError: false\n  });\n\n  const _createPost = useSelector(state => state.createPost);\n\n  const dispatch = useDispatch();\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [type, setType] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [content, setContent] = useState(\"\");\n\n  const _typeHandler = _type => {\n    setType(_type);\n  };\n\n  const presignedUrl = useMemo(() => {\n    if (presignedUrlResponse.success) {\n      return {\n        _endUrl: presignedUrlResponse.data.presigned,\n        url: presignedUrlResponse.data.url\n      };\n    }\n\n    return null;\n  }, [presignedUrlResponse]);\n\n  const _handleChange = async file => {\n    setFile(file);\n\n    if (!presignedUrl) {\n      const params = {\n        fileName: file.name,\n        fileType: file.type,\n        type: \"memory\"\n      };\n      dispatch(getPresignedUrl(params));\n    }\n  };\n\n  const _handleCheckbox = () => {\n    setIsPrivate(!isPrivate);\n  };\n\n  const _handleSubmit = async () => {\n    try {\n      setLoading(true);\n      let params = {\n        isPrivate\n      };\n\n      if (presignedUrl) {\n        params[\"image\"] = {\n          url: presignedUrl.url,\n          caption: \"\"\n        };\n        let formData = new FormData();\n\n        if (file) {\n          formData.append(\"file\", file);\n        }\n\n        const reqObj = {\n          method: \"PUT\",\n          body: file\n        };\n        await fetch(presignedUrl._endUrl, reqObj);\n      } else {\n        params[\"content\"] = content;\n      }\n\n      dispatch(createPost(params));\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    if (_createPost.error) {\n      setError({\n        msg: _createPost.error.message,\n        hasError: true\n      });\n    }\n\n    if (_createPost.success) {\n      setSuccess(true);\n    }\n\n    if (!_createPost.loading) {\n      setLoading(false);\n    }\n\n    () => {\n      dispatch(createPostReset());\n    };\n  }, [_createPost]);\n\n  const _clear = () => {\n    setError({\n      msg: \"\",\n      hasError: false\n    });\n    setSuccess(false);\n    setContent(\"\");\n    setFile(null);\n    setType(\"\");\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    toggle: toggle,\n    children: type.length > 0 ? /*#__PURE__*/_jsxDEV(PostContainer, {\n      children: loading || success || error.hasError ? /*#__PURE__*/_jsxDEV(WarningWrapper, {\n        children: [loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 16\n        }, this) : null, success ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SuccessMessage, {\n            children: \"AHOY! Post has been created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            toggle: success,\n            onClick: _clear,\n            children: \"Share Another memory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this) : null, error.hasError ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: error.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            toggle: error.hasError,\n            onClick: _clear,\n            children: \"Give another try\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [type !== \"memory\" ? /*#__PURE__*/_jsxDEV(TextArea, {\n          value: content,\n          onChange: e => {\n            setContent(e.target.value);\n          },\n          rows: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 4\n        }, this) : /*#__PURE__*/_jsxDEV(UploadFile, {\n          image: file,\n          cb: _handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: isPrivate,\n            onChange: _handleCheckbox,\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"Private\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 4\n        }, this), toggle ? /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: _handleSubmit,\n            toggle: toggle,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: _clear,\n            toggle: toggle,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 14\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Action, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => _typeHandler(\"post\"),\n        toggle: toggle,\n        children: \"Add Your Thought\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => _typeHandler(\"memory\"),\n        toggle: toggle,\n        children: \"Add Your Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 2\n  }, this);\n};\n\n_s(AddPost, \"Jj6Jxnyq+5N88glMRubCrd+TQgs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = AddPost;\nconst Container = styled.div`\n\tposition: absolute;\n\tright: ${props => props.toggle ? \"80px\" : \"50px\"};\n\tbottom: ${props => props.toggle ? \"80px\" : \"50px\"};\n\topacity: ${props => props.toggle ? 1 : 0};\n\twidth: ${props => props.toggle ? \"500px\" : \"0px\"};\n\tmin-height: ${props => props.toggle ? \"200px\" : \"0px\"};\n\tmax-height: 400px;\n\tbackground-color: #ffffffa3;\n\tborder-radius: 10px;\n\ttransform-origin: bottom right;\n\ttransition: all 0.4s linear;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 20px;\n`;\n_c2 = Container;\nconst Action = styled.div`\n\twidth: 100%;\n\tmin-height: inherit;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tgap: 20px;\n`;\n_c3 = Action;\nconst Button = styled.button`\n\tborder: none;\n\theight: 48px;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\ttransition-delay: 200s;\n\topacity: ${props => props.toggle ? 1 : 0};\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n\tdisplay: ${props => props.toggle ? \"block\" : \"none\"}\n`;\n_c4 = Button;\nconst PostContainer = styled.div`\n\twidth: 100%;\n\tmin-height: inherit;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n`;\n_c5 = PostContainer;\nconst WarningWrapper = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tflex: 1;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\tgap: 20px; \n`;\n_c6 = WarningWrapper;\nconst Checkbox = styled.input`\n\n`;\n_c7 = Checkbox;\nconst Label = styled.label`\n\tcolor: #212121;\n`;\n_c8 = Label;\nconst InputWrapper = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tgap: 10px;\n`;\n_c9 = InputWrapper;\nconst TextArea = styled.textarea`\n\twidth: 100%;\n\tborder: none;\n\tborder-radius: 10px;\n\tresize: none;\n\tflex: 1;\n\tpadding: 20px;\n\tbackground-color: #636e722e;\n\tcolor: #212121;\n\tfont-weight: 500;\n`;\n_c10 = TextArea;\nconst ButtonWrapper = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tgap: 10px;\n`;\n_c11 = ButtonWrapper;\nconst SuccessMessage = styled.h3`\n\tcolor: #009432;\n`;\n_c12 = SuccessMessage;\nconst ErrorMessage = styled.h3`\n\tcolor: #ED4C67;\n`;\n_c13 = ErrorMessage;\nexport default AddPost;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"AddPost\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Action\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"PostContainer\");\n$RefreshReg$(_c6, \"WarningWrapper\");\n$RefreshReg$(_c7, \"Checkbox\");\n$RefreshReg$(_c8, \"Label\");\n$RefreshReg$(_c9, \"InputWrapper\");\n$RefreshReg$(_c10, \"TextArea\");\n$RefreshReg$(_c11, \"ButtonWrapper\");\n$RefreshReg$(_c12, \"SuccessMessage\");\n$RefreshReg$(_c13, \"ErrorMessage\");","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/Components/AddPost.tsx"],"names":["Fragment","useEffect","useMemo","useState","styled","UploadFile","useSelector","useDispatch","getPresignedUrl","createPost","createPostReset","Loading","AddPost","toggle","success","setSuccess","loading","setLoading","presignedUrlResponse","state","presignedUrl","error","setError","msg","hasError","_createPost","dispatch","isPrivate","setIsPrivate","type","setType","file","setFile","content","setContent","_typeHandler","_type","_endUrl","data","presigned","url","_handleChange","params","fileName","name","fileType","_handleCheckbox","_handleSubmit","caption","formData","FormData","append","reqObj","method","body","fetch","message","_clear","length","e","target","value","Container","div","props","Action","Button","button","PostContainer","WarningWrapper","Checkbox","input","Label","label","InputWrapper","TextArea","textarea","ButtonWrapper","SuccessMessage","h3","ErrorMessage"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAeA,MAAMC,OAAO,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAACC,IAAAA;AAAD,GAAoB;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAMe,oBAA+B,GAAGZ,WAAW,CAAEa,KAAD,IAAqBA,KAAK,CAACC,YAA5B,CAAnD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAa;AAC9CoB,IAAAA,GAAG,EAAE,EADyC;AAE9CC,IAAAA,QAAQ,EAAE;AAFoC,GAAb,CAAlC;;AAIA,QAAMC,WAAsB,GAAGnB,WAAW,CAAEa,KAAD,IAAqBA,KAAK,CAACV,UAA5B,CAA1C;;AACA,QAAMiB,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAAC4B,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAc,IAAd,CAAhC;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAS,EAAT,CAAtC;;AACA,QAAMgC,YAAY,GAAIC,KAAD,IAAgB;AACpCN,IAAAA,OAAO,CAACM,KAAD,CAAP;AACA,GAFD;;AAGE,QAAMhB,YAAY,GAAGlB,OAAO,CAAC,MAAI;AAClC,QAAGgB,oBAAoB,CAACJ,OAAxB,EAAgC;AAC/B,aAAO;AAACuB,QAAAA,OAAO,EAAEnB,oBAAoB,CAACoB,IAArB,CAA0BC,SAApC;AAA+CC,QAAAA,GAAG,EAAEtB,oBAAoB,CAACoB,IAArB,CAA0BE;AAA9E,OAAP;AACA;;AACD,WAAO,IAAP;AACE,GAL2B,EAK1B,CAACtB,oBAAD,CAL0B,CAA5B;;AAOC,QAAMuB,aAAa,GAAG,MAAOV,IAAP,IAAmB;AACzCC,IAAAA,OAAO,CAACD,IAAD,CAAP;;AACA,QAAG,CAACX,YAAJ,EAAiB;AACd,YAAMsB,MAAM,GAAG;AAClBC,QAAAA,QAAQ,EAAEZ,IAAI,CAACa,IADG;AAElBC,QAAAA,QAAQ,EAAEd,IAAI,CAACF,IAFG;AAGlBA,QAAAA,IAAI,EAAE;AAHY,OAAf;AAKJH,MAAAA,QAAQ,CAAMlB,eAAe,CAACkC,MAAD,CAArB,CAAR;AACE;AACD,GAVA;;AAYD,QAAMI,eAAe,GAAG,MAAI;AAC7BlB,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACE,GAFD;;AAIA,QAAMoB,aAAa,GAAG,YAAU;AAC/B,QAAI;AACH9B,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAIyB,MAAsB,GAAG;AAC5Bf,QAAAA;AAD4B,OAA7B;;AAGA,UAAGP,YAAH,EAAgB;AACfsB,QAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACjBF,UAAAA,GAAG,EAAEpB,YAAY,CAACoB,GADD;AAEjBQ,UAAAA,OAAO,EAAE;AAFQ,SAAlB;AAKA,YAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AACA,YAAGnB,IAAH,EAAQ;AACPkB,UAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBpB,IAAxB;AACA;;AACD,cAAMqB,MAAM,GAAE;AACbC,UAAAA,MAAM,EAAE,KADK;AAEbC,UAAAA,IAAI,EAAEvB;AAFO,SAAd;AAIA,cAAMwB,KAAK,CAACnC,YAAY,CAACiB,OAAd,EAAsBe,MAAtB,CAAX;AACA,OAfD,MAeK;AACJV,QAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBT,OAApB;AACA;;AAEDP,MAAAA,QAAQ,CAAMjB,UAAU,CAACiC,MAAD,CAAhB,CAAR;AACA,KAzBD,CAyBE,OAAOrB,KAAP,EAAc,CAEf;AACD,GA7BD;;AA+BApB,EAAAA,SAAS,CAAC,MAAI;AACb,QAAGwB,WAAW,CAACJ,KAAf,EAAqB;AACtBC,MAAAA,QAAQ,CAAC;AACRC,QAAAA,GAAG,EAAEE,WAAW,CAACJ,KAAZ,CAAkBmC,OADf;AAERhC,QAAAA,QAAQ,EAAE;AAFF,OAAD,CAAR;AAIE;;AACD,QAAGC,WAAW,CAACX,OAAf,EAAuB;AACtBC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;;AACD,QAAG,CAACU,WAAW,CAACT,OAAhB,EAAwB;AACvBC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;;AACD,UAAI;AACHS,MAAAA,QAAQ,CAAMhB,eAAe,EAArB,CAAR;AACA,KAFD;AAGA,GAhBQ,EAgBP,CAACe,WAAD,CAhBO,CAAT;;AAkBA,QAAMgC,MAAM,GAAG,MAAI;AAClBnC,IAAAA,QAAQ,CAAC;AACRC,MAAAA,GAAG,EAAE,EADG;AAERC,MAAAA,QAAQ,EAAE;AAFF,KAAD,CAAR;AAIAT,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAmB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,GAVD;;AAWD,sBACD,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEJ,MAAnB;AAAA,cACEgB,IAAI,CAAC6B,MAAL,GAAc,CAAd,gBAAkB,QAAC,aAAD;AAAA,gBAEhB1C,OAAO,IAAIF,OAAX,IAAsBO,KAAK,CAACG,QAA5B,gBAAuC,QAAC,cAAD;AAAA,mBACvCR,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAiB,IADe,EAEvCF,OAAO,gBAAG,QAAC,QAAD;AAAA,kCACV,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,eAEV,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAEA,OAAhB;AAAyB,YAAA,OAAO,EAAE2C,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFU;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,GAGK,IAL2B,EAMvCpC,KAAK,CAACG,QAAN,gBAAiB,QAAC,QAAD;AAAA,kCACjB,QAAC,YAAD;AAAA,sBACEH,KAAK,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,kBADiB,eAIjB,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAEF,KAAK,CAACG,QAAtB;AAAgC,YAAA,OAAO,EAAEiC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJiB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjB,GAKY,IAX2B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvC,gBAYkB,QAAC,QAAD;AAAA,mBACpB5B,IAAI,KAAI,QAAR,gBACA,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEI,OAAjB;AAA0B,UAAA,QAAQ,EAAG0B,CAAD,IAAK;AAAEzB,YAAAA,UAAU,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AAA2B,WAAtE;AAAwE,UAAA,IAAI,EAAE;AAA9E;AAAA;AAAA;AAAA;AAAA,gBADA,gBAEC,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE9B,IAAnB;AAAyB,UAAA,EAAE,EAAEU;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAHmB,eAKpB,QAAC,YAAD;AAAA,kCACC,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEd,SAAnB;AAA8B,YAAA,QAAQ,EAAEmB,eAAxC;AAAyD,YAAA,IAAI,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBALoB,EAUnBjC,MAAM,gBAAG,QAAC,aAAD;AAAA,kCACT,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEkC,aAAjB;AAAgC,YAAA,MAAM,EAAElC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADS,eAET,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE4C,MAAjB;AAAyB,YAAA,MAAM,EAAE5C,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFS;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,GAGY,IAbC;AAAA;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,YAAlB,gBA4BiB,QAAC,MAAD;AAAA,8BAChB,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAKsB,YAAY,CAAC,MAAD,CAAlC;AAA4C,QAAA,MAAM,EAAEtB,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADgB,eAEhB,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAKsB,YAAY,CAAC,QAAD,CAAlC;AAA8C,QAAA,MAAM,EAAEtB,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BnB;AAAA;AAAA;AAAA;AAAA,UADC;AAoCD,CAxID;;GAAMD,O;UAGmCN,W,EAKTA,W,EACdC,W;;;KATZK,O;AA0IN,MAAMkD,SAAS,GAAG1D,MAAM,CAAC2D,GAAiB;AAC1C;AACA,UAAUC,KAAK,IAAIA,KAAK,CAACnD,MAAN,GAAe,MAAf,GAAuB,MAAO;AACjD,WAAWmD,KAAK,IAAIA,KAAK,CAACnD,MAAN,GAAe,MAAf,GAAuB,MAAO;AAClD,YAAYmD,KAAK,IAAIA,KAAK,CAACnD,MAAN,GAAe,CAAf,GAAkB,CAAE;AACzC,UAAUmD,KAAK,IAAIA,KAAK,CAACnD,MAAN,GAAe,OAAf,GAAwB,KAAM;AACjD,eAAemD,KAAK,IAAIA,KAAK,CAACnD,MAAN,GAAe,OAAf,GAAwB,KAAM;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMiD,S;AAkBN,MAAMG,MAAM,GAAG7D,MAAM,CAAC2D,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAME,M;AAUN,MAAMC,MAAM,GAAG9D,MAAM,CAAC+D,MAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYH,KAAK,IAAIA,KAAK,CAACnD,MAAN,GAAe,CAAf,GAAkB,CAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYmD,KAAK,IAAGA,KAAK,CAACnD,MAAN,GAAe,OAAf,GAAwB,MAAO;AACnD,CAjBA;MAAMqD,M;AAoBN,MAAME,aAAa,GAAGhE,MAAM,CAAC2D,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMK,a;AAQN,MAAMC,cAAc,GAAGjE,MAAM,CAAC2D,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMM,c;AAWN,MAAMC,QAAQ,GAAGlE,MAAM,CAACmE,KAAM;AAC9B;AACA,CAFA;MAAMD,Q;AAIN,MAAME,KAAK,GAAGpE,MAAM,CAACqE,KAAM;AAC3B;AACA,CAFA;MAAMD,K;AAIN,MAAME,YAAY,GAAGtE,MAAM,CAAC2D,GAAI;AAChC;AACA;AACA;AACA,CAJA;MAAMW,Y;AAMN,MAAMC,QAAQ,GAAGvE,MAAM,CAACwE,QAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;OAAMD,Q;AAYN,MAAME,aAAa,GAAGzE,MAAM,CAAC2D,GAAI;AACjC;AACA;AACA;AACA,CAJA;OAAMc,a;AAMN,MAAMC,cAAc,GAAG1E,MAAM,CAAC2E,EAAG;AACjC;AACA,CAFA;OAAMD,c;AAIN,MAAME,YAAY,GAAG5E,MAAM,CAAC2E,EAAG;AAC/B;AACA,CAFA;OAAMC,Y;AAIN,eAAepE,OAAf","sourcesContent":["import { Fragment, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport UploadFile from \"./UploadFile\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../store\";\nimport { StateType } from \"../interfacesAndTypes/TState\";\nimport { getPresignedUrl } from \"../actions/feedAction\";\nimport { PostParamsType } from  \"../interfacesAndTypes/RequestParams\";\nimport { createPost } from \"../actions/feedAction\";\nimport { createPostReset } from \"../actions/feedAction\";\nimport Loading from \"./Loading\"\n\ntype Props = {\n\ttoggle: boolean\n}\n\ntype ToggleProps = {\n\ttoggle?: boolean\n}\n\ntype ErrorProps = {\n\tmsg: string,\n\thasError: boolean\n}\n\nconst AddPost = ({toggle}: Props) => {\n\tconst [success, setSuccess] = useState<boolean>(false);\n\tconst [loading, setLoading] = useState<boolean>(false);\n\tconst presignedUrlResponse: StateType = useSelector((state: RootState)=> state.presignedUrl);\n\tconst [error, setError] = useState<ErrorProps>({\n\t\tmsg: \"\",\n\t\thasError: false\n\t});\n\tconst _createPost: StateType = useSelector((state: RootState)=> state.createPost);\n\tconst dispatch = useDispatch();\n\tconst [isPrivate, setIsPrivate] = useState<boolean>(false);\n\tconst [type, setType] = useState<string>(\"\")\n\tconst [file, setFile] = useState<File | null>(null)\n\tconst [content, setContent] = useState<string>(\"\");\n\tconst _typeHandler = (_type:string)=>{\n\t\tsetType(_type);\n\t}\n   const presignedUrl = useMemo(()=>{\n\t\tif(presignedUrlResponse.success){\n\t\t\treturn {_endUrl: presignedUrlResponse.data.presigned, url: presignedUrlResponse.data.url};\n\t\t}\n\t\treturn null;\n   },[presignedUrlResponse])\n\n    const _handleChange = async (file:File)=>{\n\t   setFile(file);\n\t   if(!presignedUrl){\n\t\t     const params = {\n\t\t\t\tfileName: file.name,\n\t\t\t\tfileType: file.type,\n\t\t\t\ttype: \"memory\"\n\t\t\t }\n\t\t\tdispatch<any>(getPresignedUrl(params))\n\t   }\n   }\n\n   const _handleCheckbox = ()=>{\n\t\tsetIsPrivate(!isPrivate);\n   }\n\n   const _handleSubmit = async ()=>{\n\t   try {\n\t\t   setLoading(true)\n\t\t   let params: PostParamsType = {\n\t\t\t   isPrivate\n\t\t   }\n\t\t   if(presignedUrl){\n\t\t\t   params[\"image\"] = {\n\t\t\t\t   url: presignedUrl.url,\n\t\t\t\t   caption: \"\"\n\t\t\t   }\n\n\t\t\t   let formData = new FormData();\n\t\t\t   if(file){\n\t\t\t   \tformData.append(\"file\", file);\n\t\t\t   }\n\t\t\t   const reqObj= {\n\t\t\t\t   method: \"PUT\",\n\t\t\t\t   body: file\n\t\t\t   }\n\t\t\t   await fetch(presignedUrl._endUrl,reqObj);\n\t\t   }else{\n\t\t\t   params[\"content\"] = content;\n\t\t   }\n\n\t\t   dispatch<any>(createPost(params));\n\t   } catch (error) {\n\t\t   \n\t   }\n   }\n\n   useEffect(()=>{\n\t   if(_createPost.error){\n\t\t\tsetError({\n\t\t\t\tmsg: _createPost.error.message,\n\t\t\t\thasError: true\n\t\t\t})\n\t   }\n\t   if(_createPost.success){\n\t\t   setSuccess(true)\n\t   }\n\t   if(!_createPost.loading){\n\t\t   setLoading(false)\n\t   }\n\t   ()=>{\n\t\t   dispatch<any>(createPostReset())\n\t   }\n   },[_createPost])\n\n   const _clear = ()=>{\n\t   setError({\n\t\t   msg: \"\",\n\t\t   hasError: false\n\t   })\n\t   setSuccess(false)\n\t   setContent(\"\")\n\t   setFile(null)\n\t   setType(\"\")\n\t   setLoading(false)\n   }\n  return (\n\t<Container toggle={toggle}>\n\t\t{type.length > 0 ? <PostContainer>\n\t\t\t\n\t\t\t{ loading || success || error.hasError ? <WarningWrapper>\n\t\t\t\t{loading ? <Loading /> : null }\n\t\t\t\t{success ? <Fragment> \n\t\t\t\t\t<SuccessMessage>AHOY! Post has been created</SuccessMessage>\n\t\t\t\t\t<Button toggle={success} onClick={_clear}>Share Another memory</Button>\n\t\t\t\t</Fragment>: null}\n\t\t\t\t{error.hasError ? <Fragment>\n\t\t\t\t\t<ErrorMessage>\n\t\t\t\t\t\t{error.msg}\n\t\t\t\t\t</ErrorMessage>\n\t\t\t\t\t<Button toggle={error.hasError} onClick={_clear}>Give another try</Button>\n\t\t\t\t</Fragment>: null}\n\t\t\t</WarningWrapper> : <Fragment>{\n\t\t\ttype!== \"memory\" ? \n\t\t\t<TextArea value={content} onChange={(e)=>{ setContent(e.target.value)}} rows={5} /> \n\t\t\t:<UploadFile image={file} cb={_handleChange} />\n\t\t\t}\n\t\t\t<InputWrapper>\n\t\t\t\t<Checkbox checked={isPrivate} onChange={_handleCheckbox} type=\"checkbox\" /> \n\t\t\t\t<Label>Private</Label>\n\t\t\t</InputWrapper>\n\t\t\t\n\t\t\t{toggle ? <ButtonWrapper>\n\t\t\t\t<Button onClick={_handleSubmit} toggle={toggle}>Submit</Button>\n\t\t\t\t<Button onClick={_clear} toggle={toggle}>Cancel</Button>\n\t\t\t</ButtonWrapper> : null }</Fragment>}\n\t\t</PostContainer>: <Action>\n\t\t\t <Button onClick={()=> _typeHandler(\"post\")} toggle={toggle}>Add Your Thought</Button>\n\t\t\t <Button onClick={()=> _typeHandler(\"memory\")} toggle={toggle}>Add Your Memory</Button>\n\t\t\t</Action>}\n\t</Container>\n  )\n}\n\nconst Container = styled.div<ToggleProps>`\n\tposition: absolute;\n\tright: ${props => props.toggle ? \"80px\": \"50px\"};\n\tbottom: ${props => props.toggle ? \"80px\": \"50px\"};\n\topacity: ${props => props.toggle ? 1: 0};\n\twidth: ${props => props.toggle ? \"500px\": \"0px\"};\n\tmin-height: ${props => props.toggle ? \"200px\": \"0px\"};\n\tmax-height: 400px;\n\tbackground-color: #ffffffa3;\n\tborder-radius: 10px;\n\ttransform-origin: bottom right;\n\ttransition: all 0.4s linear;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 20px;\n`;\n\nconst Action = styled.div`\n\twidth: 100%;\n\tmin-height: inherit;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tgap: 20px;\n`\n\nconst Button = styled.button<ToggleProps>`\n\tborder: none;\n\theight: 48px;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\ttransition-delay: 200s;\n\topacity: ${props => props.toggle ? 1: 0};\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n\tdisplay: ${props=> props.toggle ? \"block\": \"none\"}\n`\n\n\nconst PostContainer = styled.div`\n\twidth: 100%;\n\tmin-height: inherit;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 10px;\n`;\n\nconst WarningWrapper = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tflex: 1;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\tgap: 20px; \n`\n\nconst Checkbox = styled.input`\n\n`;\n\nconst Label = styled.label`\n\tcolor: #212121;\n`\n\nconst InputWrapper = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tgap: 10px;\n`\n\nconst TextArea = styled.textarea`\n\twidth: 100%;\n\tborder: none;\n\tborder-radius: 10px;\n\tresize: none;\n\tflex: 1;\n\tpadding: 20px;\n\tbackground-color: #636e722e;\n\tcolor: #212121;\n\tfont-weight: 500;\n`\n\nconst ButtonWrapper = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tgap: 10px;\n`\n\nconst SuccessMessage = styled.h3`\n\tcolor: #009432;\n`;\n\nconst ErrorMessage = styled.h3`\n\tcolor: #ED4C67;\n`\n\nexport default AddPost"]},"metadata":{},"sourceType":"module"}