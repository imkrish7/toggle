{"ast":null,"code":"var _jsxFileName = \"/home/rackham/dev/toggle/frontend/src/Components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, memo } from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFetchDashboardFeed } from '../hooks/dashboardFeed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const response = useFetchDashboardFeed();\n  const dispatch = useDispatch();\n  const deletePost = useSelector(state => state.deletePost);\n  const posts = useMemo(() => {\n    if (response.data) {\n      return response.data.posts;\n    } else {\n      return [];\n    }\n  }, [response]);\n\n  const _delete = id => {\n    dispatch(deletePost({\n      id\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(PostContainer, {\n      children: posts.length > 0 ? posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(PostCard, {\n          data: post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Message, {\n        children: \"Share some memory to your wall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Dashboard, \"1WlFJHHCFUIrMhejeUPOh6rTG6c=\", false, function () {\n  return [useFetchDashboardFeed, useDispatch, useSelector];\n});\n\n_c = Dashboard;\nconst Container = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n_c2 = Container;\nconst PostContainer = styled.div`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n_c3 = PostContainer;\nconst Button = styled.button`\n  border: none;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n`;\nconst Message = styled.h1`\n  color: #636e72;\n`;\n_c4 = Message;\nexport default _c5 = /*#__PURE__*/memo(Dashboard);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"PostContainer\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"%default%\");","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/Components/Dashboard.tsx"],"names":["React","useMemo","memo","styled","PostCard","useSelector","useDispatch","useFetchDashboardFeed","Dashboard","response","dispatch","deletePost","state","posts","data","_delete","id","length","map","post","_id","Container","div","PostContainer","Button","button","Message","h1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,IAAzB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,qBAAT,QAAsC,wBAAtC;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGF,qBAAqB,EAAtC;AACA,QAAMG,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,UAAqB,GAAGN,WAAW,CAAEO,KAAD,IAAqBA,KAAK,CAACD,UAA5B,CAAzC;AACA,QAAME,KAAK,GAAGZ,OAAO,CAAC,MAAI;AACxB,QAAGQ,QAAQ,CAACK,IAAZ,EAAiB;AACf,aAAOL,QAAQ,CAACK,IAAT,CAAcD,KAArB;AACD,KAFD,MAEK;AACH,aAAO,EAAP;AACD;AACF,GANoB,EAMnB,CAACJ,QAAD,CANmB,CAArB;;AAQA,QAAMM,OAAO,GAAIC,EAAD,IAAa;AACzBN,IAAAA,QAAQ,CAAMC,UAAU,CAAC;AAACK,MAAAA;AAAD,KAAD,CAAhB,CAAR;AACH,GAFD;;AAGA,sBACD,QAAC,SAAD;AAAA,2BACG,QAAC,aAAD;AAAA,gBACGH,KAAK,CAACI,MAAN,GAAe,CAAf,GAAoBJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAwB;AACrD,4BAAO,QAAC,QAAD;AAAyB,UAAA,IAAI,EAAEA;AAA/B,WAAeA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFoB,CAApB,gBAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADC;AASD,CAxBD;;GAAMZ,S;UACaD,qB,EACAD,W,EACaD,W;;;KAH1BG,S;AA0BN,MAAMa,SAAS,GAAGlB,MAAM,CAACmB,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,S;AAON,MAAME,aAAa,GAAGpB,MAAM,CAACmB,GAAI;AACjC;AACA;AACA;AACA;AACA,CALA;MAAMC,a;AAON,MAAMC,MAAM,GAAGrB,MAAM,CAACsB,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMC,OAAO,GAAGvB,MAAM,CAACwB,EAAG;AAC1B;AACA,CAFA;MAAMD,O;AAGN,kCAAexB,IAAI,CAACM,SAAD,CAAnB","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\nimport { RootState } from '../store';\nimport { StateType } from '../interfacesAndTypes/TState';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PostParamsType } from '../interfacesAndTypes/RequestParams';\nimport { useFetchDashboardFeed } from '../hooks/dashboardFeed';\nimport { deletePost } from '../actions/feedAction';\n\nconst Dashboard = () => {\n  const response = useFetchDashboardFeed();\n  const dispatch = useDispatch();\n  const deletePost: StateType = useSelector((state: RootState)=> state.deletePost)\n  const posts = useMemo(()=>{\n    if(response.data){\n      return response.data.posts;\n    }else{\n      return []\n    }\n  },[response])\n\n  const _delete = (id:string)=>{\n      dispatch<any>(deletePost({id}))\n  }\n  return (\n\t<Container>\n    <PostContainer>\n      {posts.length > 0  ? posts.map((post: PostParamsType)=>{\n        return <PostCard key={post._id} data={post}/>\n      }) : <Message>Share some memory to your wall</Message> }\n    </PostContainer>\n  </Container>\n  )\n}\n\nconst Container = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nconst PostContainer = styled.div`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`\n\nconst Button = styled.button`\n  border: none;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n`\n\nconst Message = styled.h1`\n  color: #636e72;\n`\nexport default memo(Dashboard)"]},"metadata":{},"sourceType":"module"}