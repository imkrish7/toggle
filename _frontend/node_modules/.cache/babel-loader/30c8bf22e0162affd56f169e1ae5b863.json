{"ast":null,"code":"import { getActionsStates } from \"../Utils/storeHelpers\";\nimport { defaultState, errorState, successState, loadingState } from \"../Utils/defaultStates\";\nimport { GET_OTP, VERIFY_OTP } from \"../actions/Types\";\n\nfunction loginResponse(state, action) {\n  switch (action.type) {\n    case getActionsStates(GET_OTP).success:\n      return { ...successState,\n        data: action.data\n      };\n\n    case getActionsStates(GET_OTP).loading:\n      return { ...loadingState,\n        loading: action.isLoading\n      };\n\n    case getActionsStates(GET_OTP).error:\n      return { ...errorState,\n        error: action.error\n      };\n\n    default:\n      return defaultState;\n  }\n}\n\nfunction verifyResponse(state, action) {\n  switch (action.type) {\n    case getActionsStates(VERIFY_OTP).success:\n      const {\n        token\n      } = action.data.data;\n\n      if (token) {\n        localStorage.setItem('TOGGLE_AUTH_TOKEN', token);\n      }\n\n      return { ...successState,\n        data: action.data\n      };\n\n    case getActionsStates(VERIFY_OTP).loading:\n      return { ...loadingState,\n        loading: action.isLoading\n      };\n\n    case getActionsStates(VERIFY_OTP).error:\n      return { ...errorState,\n        error: action.error\n      };\n\n    default:\n      return defaultState;\n  }\n}\n\nexport { loginResponse };","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/reducers/userReducers.ts"],"names":["getActionsStates","defaultState","errorState","successState","loadingState","GET_OTP","VERIFY_OTP","loginResponse","state","action","type","success","data","loading","isLoading","error","verifyResponse","token","localStorage","setItem"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,uBAAjC;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,EAAiDC,YAAjD,QAAqE,wBAArE;AAEA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAAyCC,MAAzC,EAA4D;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKV,gBAAgB,CAACK,OAAD,CAAhB,CAA0BM,OAA/B;AACC,aAAO,EACN,GAAGR,YADG;AAENS,QAAAA,IAAI,EAAEH,MAAM,CAACG;AAFP,OAAP;;AAID,SAAKZ,gBAAgB,CAACK,OAAD,CAAhB,CAA0BQ,OAA/B;AACC,aAAO,EACN,GAAGT,YADG;AAENS,QAAAA,OAAO,EAAEJ,MAAM,CAACK;AAFV,OAAP;;AAID,SAAKd,gBAAgB,CAACK,OAAD,CAAhB,CAA0BU,KAA/B;AACC,aAAO,EACN,GAAGb,UADG;AAENa,QAAAA,KAAK,EAAEN,MAAM,CAACM;AAFR,OAAP;;AAID;AACC,aAAOd,YAAP;AAjBF;AAmBA;;AAED,SAASe,cAAT,CAAwBR,KAAxB,EAA0CC,MAA1C,EAA6D;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKV,gBAAgB,CAACM,UAAD,CAAhB,CAA6BK,OAAlC;AACC,YAAM;AAAEM,QAAAA;AAAF,UAAYR,MAAM,CAACG,IAAP,CAAYA,IAA9B;;AACA,UAAGK,KAAH,EAAS;AACRC,QAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CF,KAA1C;AACA;;AACD,aAAO,EACN,GAAGd,YADG;AAENS,QAAAA,IAAI,EAAEH,MAAM,CAACG;AAFP,OAAP;;AAID,SAAKZ,gBAAgB,CAACM,UAAD,CAAhB,CAA6BO,OAAlC;AACC,aAAO,EACN,GAAGT,YADG;AAENS,QAAAA,OAAO,EAAEJ,MAAM,CAACK;AAFV,OAAP;;AAID,SAAKd,gBAAgB,CAACM,UAAD,CAAhB,CAA6BS,KAAlC;AACC,aAAO,EACN,GAAGb,UADG;AAENa,QAAAA,KAAK,EAAEN,MAAM,CAACM;AAFR,OAAP;;AAID;AACC,aAAOd,YAAP;AArBF;AAuBA;;AAED,SACCM,aADD","sourcesContent":["import { getActionsStates } from \"../Utils/storeHelpers\";\nimport { defaultState, errorState, successState, loadingState } from \"../Utils/defaultStates\";\nimport { StateType, ActionType } from \"../interfacesAndTypes/TState\";\nimport { GET_OTP, VERIFY_OTP } from \"../actions/Types\";\n\nfunction loginResponse(state: StateType, action: ActionType){\n\tswitch(action.type){\n\t\tcase getActionsStates(GET_OTP).success:\n\t\t\treturn {\n\t\t\t\t...successState,\n\t\t\t\tdata: action.data\n\t\t\t}\n\t\tcase getActionsStates(GET_OTP).loading:\n\t\t\treturn {\n\t\t\t\t...loadingState,\n\t\t\t\tloading: action.isLoading\n\t\t\t}\n\t\tcase getActionsStates(GET_OTP).error:\n\t\t\treturn {\n\t\t\t\t...errorState,\n\t\t\t\terror: action.error\n\t\t\t}\n\t\tdefault:\n\t\t\treturn defaultState\n\t}\n}\n\nfunction verifyResponse(state: StateType, action: ActionType){\n\tswitch(action.type){\n\t\tcase getActionsStates(VERIFY_OTP).success:\n\t\t\tconst { token } = action.data.data;\n\t\t\tif(token){\n\t\t\t\tlocalStorage.setItem('TOGGLE_AUTH_TOKEN', token)\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...successState,\n\t\t\t\tdata: action.data\n\t\t\t}\n\t\tcase getActionsStates(VERIFY_OTP).loading:\n\t\t\treturn {\n\t\t\t\t...loadingState,\n\t\t\t\tloading: action.isLoading\n\t\t\t}\n\t\tcase getActionsStates(VERIFY_OTP).error:\n\t\t\treturn {\n\t\t\t\t...errorState,\n\t\t\t\terror: action.error\n\t\t\t}\n\t\tdefault:\n\t\t\treturn defaultState\n\t}\n}\n\nexport {\n\tloginResponse\n}"]},"metadata":{},"sourceType":"module"}