{"ast":null,"code":"var _jsxFileName = \"/home/rackham/dev/toggle/frontend/src/Context/AuthProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useMemo } from 'react';\nimport { AuthContext } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [login, setLogin] = useState(false);\n\n  const signin = (params, callback) => {};\n\n  const signout = callback => {};\n\n  let loggedin = useMemo(() => {\n    if (localStorage.getItem(\"TOGGLE_AUTH_TOKEN\")) {\n      return true;\n    } else {\n      return false;\n    }\n  }, [login]);\n  let value = {\n    loggedin,\n    signin,\n    signout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 2\n  }, this);\n};\n\n_s(AuthProvider, \"4JVEIWE0l0jC3enyvhm4gFN875E=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/Context/AuthProvider.tsx"],"names":["useState","useMemo","AuthContext","AuthProvider","children","login","setLogin","signin","params","callback","signout","loggedin","localStorage","getItem","value"],"mappings":";;;AAAA,SAAoBA,QAApB,EAA8BC,OAA9B,QAA4C,OAA5C;AACA,SAAkBC,WAAlB,QAAiD,eAAjD;;AAOA,OAAO,MAAMC,YAAY,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAU,KAAV,CAAlC;;AACA,QAAMO,MAAM,GAAG,CAACC,MAAD,EAAqBC,QAArB,KAA+C,CAE5D,CAFF;;AAIC,QAAMC,OAAO,GAAID,QAAD,IAA0B,CAEzC,CAFD;;AAGA,MAAIE,QAAQ,GAAGV,OAAO,CAAC,MAAI;AACzB,QAAGW,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAH,EAA6C;AAC3C,aAAO,IAAP;AACD,KAFD,MAEK;AACH,aAAO,KAAP;AACD;AACF,GANqB,EAMnB,CAACR,KAAD,CANmB,CAAtB;AAOA,MAAIS,KAAK,GAAG;AAAEH,IAAAA,QAAF;AAAYJ,IAAAA,MAAZ;AAAoBG,IAAAA;AAApB,GAAZ;AACD,sBACD,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,KAA7B;AAAA,cACEV;AADF;AAAA;AAAA;AAAA;AAAA,UADC;AAKD,CAtBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { ReactNode, useState, useMemo }from 'react'\nimport { useAuth, AuthContext, ParamsType } from './AuthContext'\n\n\ntype Props = {\n\tchildren: ReactNode\n}\n\nexport const AuthProvider = ({ children }: Props) => {\n  const [login, setLogin] = useState<boolean>(false) \n  const signin = (params: ParamsType, callback: VoidFunction )=>{\n\n   }\n\n   const signout = (callback: VoidFunction)=>{\n\n   }\n   let loggedin = useMemo(()=>{\n     if(localStorage.getItem(\"TOGGLE_AUTH_TOKEN\")){\n       return true;\n     }else{\n       return false\n     }\n   }, [login])\n   let value = { loggedin, signin, signout }\n  return (\n\t<AuthContext.Provider value={value}>\n\t\t{children}\n\t</AuthContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}