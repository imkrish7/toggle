{"ast":null,"code":"import { getActionsStates } from \"../Utils/storeHelpers\";\nimport { GET_FEED } from \"./Types\";\nimport { sendRequest } from \"../services\";\nexport const getFeedLoading = isLoading => {\n  return {\n    type: getActionsStates(GET_FEED).loading,\n    isLoading\n  };\n};\nexport const getFeedSuccess = data => {\n  return {\n    type: getActionsStates(GET_FEED).success,\n    data\n  };\n};\nexport const getFeedError = error => {\n  return {\n    type: getActionsStates(GET_FEED).error,\n    error\n  };\n};\nexport const getFeed = () => {\n  let url = \"/feeds\";\n  let params = {};\n  return dispatch => sendRequest.get(dispatch, url, params, getFeedLoading, getFeedSuccess, getFeedError);\n};","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/actions/feedAction.ts"],"names":["getActionsStates","GET_FEED","sendRequest","getFeedLoading","isLoading","type","loading","getFeedSuccess","data","success","getFeedError","error","getFeed","url","params","dispatch","get"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,uBAAjC;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAAuB;AACpD,SAAO;AACNC,IAAAA,IAAI,EAAEL,gBAAgB,CAACC,QAAD,CAAhB,CAA2BK,OAD3B;AAENF,IAAAA;AAFM,GAAP;AAIA,CALM;AAOP,OAAO,MAAMG,cAAc,GAAIC,IAAD,IAAc;AAC3C,SAAO;AACNH,IAAAA,IAAI,EAAEL,gBAAgB,CAACC,QAAD,CAAhB,CAA2BQ,OAD3B;AAEND,IAAAA;AAFM,GAAP;AAIA,CALM;AAOP,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAc;AACzC,SAAO;AACNN,IAAAA,IAAI,EAAEL,gBAAgB,CAACC,QAAD,CAAhB,CAA2BU,KAD3B;AAENA,IAAAA;AAFM,GAAP;AAIA,CALM;AAOP,OAAO,MAAMC,OAAO,GAAG,MAAI;AAC1B,MAAIC,GAAG,GAAG,QAAV;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,SAAQC,QAAD,IAAmBb,WAAW,CAACc,GAAZ,CAAgBD,QAAhB,EAA0BF,GAA1B,EAA+BC,MAA/B,EAAsCX,cAAtC,EAAsDI,cAAtD,EAAsEG,YAAtE,CAA1B;AACA,CAJM","sourcesContent":["import { getActionsStates } from \"../Utils/storeHelpers\";\nimport { GET_FEED } from \"./Types\";\nimport { sendRequest } from \"../services\"\n\nexport const getFeedLoading = (isLoading: boolean) =>{\n\treturn {\n\t\ttype: getActionsStates(GET_FEED).loading,\n\t\tisLoading\n\t}\n}\n\nexport const getFeedSuccess = (data: any) =>{\n\treturn {\n\t\ttype: getActionsStates(GET_FEED).success,\n\t\tdata\n\t}\n}\n\nexport const getFeedError = (error: any)=>{\n\treturn {\n\t\ttype: getActionsStates(GET_FEED).error,\n\t\terror\n\t}\n}\n\nexport const getFeed = ()=>{\n\tlet url = \"/feeds\"\n\tlet params = {}\n\treturn (dispatch: any) => sendRequest.get(dispatch, url, params,getFeedLoading, getFeedSuccess, getFeedError)\n}"]},"metadata":{},"sourceType":"module"}