{"ast":null,"code":"var _jsxFileName = \"/home/rackham/dev/toggle/frontend/src/Components/Dashboard.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\nimport { connect } from 'react-redux';\nimport { getFeed } from '../actions/feedAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(PostContainer, {\n        children: this.state.posts.length > 0 ? this.state.posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(PostCard, {\n            data: post\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 16\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(Message, {\n          children: \"Share some memory to your wall\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 2\n    }, this);\n  }\n\n}\n\nconst Container = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n_c = Container;\nconst PostContainer = styled.div`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n_c2 = PostContainer;\nconst Button = styled.button`\n  border: none;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n`;\nconst Message = styled.h1`\n  color: #636e72;\n`;\n_c3 = Message;\n\nconst mapStateProps = state => {\n  return {\n    posts: state.dashboardFeed\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPosts: () => dispatch(getFeed())\n  };\n};\n\nexport default connect(mapStateProps, mapDispatchToProps)(Dashboard);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"PostContainer\");\n$RefreshReg$(_c3, \"Message\");","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/Components/Dashboard.tsx"],"names":["React","Component","styled","PostCard","connect","getFeed","Dashboard","constructor","props","state","posts","componentDidMount","getPosts","render","length","map","post","_id","Container","div","PostContainer","Button","button","Message","h1","mapStateProps","dashboardFeed","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,OAAT,QAAwB,uBAAxB;;;AAcA,MAAMC,SAAN,SAAwBL,SAAxB,CAAgD;AAE9CM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKH,KAAL,CAAWI,QAAX;AACD;;AAGDC,EAAAA,MAAM,GAAE;AAER,wBACD,QAAC,SAAD;AAAA,6BACG,QAAC,aAAD;AAAA,kBACG,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,MAAjB,GAA0B,CAA1B,GAA+B,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAsBC,IAAD,IAAwB;AAC3E,8BAAO,QAAC,QAAD;AAAyB,YAAA,IAAI,EAAEA;AAA/B,aAAeA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAF+B,CAA/B,gBAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADC;AASG;;AAzB2C;;AA4BhD,MAAMC,SAAS,GAAGhB,MAAM,CAACiB,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;AAON,MAAME,aAAa,GAAGlB,MAAM,CAACiB,GAAI;AACjC;AACA;AACA;AACA;AACA,CALA;MAAMC,a;AAON,MAAMC,MAAM,GAAGnB,MAAM,CAACoB,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMC,OAAO,GAAGrB,MAAM,CAACsB,EAAG;AAC1B;AACA,CAFA;MAAMD,O;;AAIN,MAAME,aAAa,GAAIhB,KAAD,IAAoB;AACxC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACiB;AADR,GAAP;AAGD,CAJD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAyB;AAClD,SAAQ;AACNhB,IAAAA,QAAQ,EAAE,MAAKgB,QAAQ,CAAMvB,OAAO,EAAb;AADjB,GAAR;AAGD,CAJD;;AAMA,eAAeD,OAAO,CAACqB,aAAD,EAAgBE,kBAAhB,CAAP,CAA2CrB,SAA3C,CAAf","sourcesContent":["import React, { useMemo, memo, Component } from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\nimport { connect } from 'react-redux';\nimport { PostParamsType } from '../interfacesAndTypes/RequestParams';\nimport { AppDispatch, RootState } from '../store';\nimport { getFeed } from '../actions/feedAction';\n\ntype Props = {\n  getPosts: any,\n  posts: any,\n  deletePost: any,\n  deletePostResponse: any\n}\n\ntype State = {\n  posts: any\n}\n\n\nclass Dashboard extends Component<Props, State> {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      posts: []\n    }\n  }\n\n  componentDidMount(){\n    this.props.getPosts();\n  }\n  \n\n  render(){\n    \n  return (\n\t<Container>\n    <PostContainer>\n      {this.state.posts.length > 0  ? this.state.posts.map((post: PostParamsType)=>{\n        return <PostCard key={post._id} data={post}/>\n      }) : <Message>Share some memory to your wall</Message> }\n    </PostContainer>\n  </Container>\n  )\n    }\n}\n\nconst Container = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nconst PostContainer = styled.div`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`\n\nconst Button = styled.button`\n  border: none;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n`\n\nconst Message = styled.h1`\n  color: #636e72;\n`\n\nconst mapStateProps = (state: RootState)=>{\n  return {\n    posts: state.dashboardFeed\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch: AppDispatch)=>{\n  return  {\n    getPosts: ()=> dispatch<any>(getFeed())\n  }\n}\n\nexport default connect(mapStateProps, mapDispatchToProps)(Dashboard)"]},"metadata":{},"sourceType":"module"}