{"ast":null,"code":"var _jsxFileName = \"/home/rackham/dev/toggle/frontend/src/Components/Dashboard.tsx\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\nimport { connect } from 'react-redux';\nimport { getFeed } from '../actions/feedAction';\nimport { togglePrivacyPost } from '../actions/feedAction';\nimport { deletePost } from '../actions/feedAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this._deletePost = id => {\n      const params = {\n        id\n      };\n      this.setState({\n        deleteId: id\n      }, this.props.deletePost(params));\n    };\n\n    this._togglePost = id => {\n      const params = {\n        id\n      };\n      this.props.getTogglePrivacy(params);\n    };\n\n    this.state = {\n      posts: [],\n      deleteId: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.posts && this.props.posts.data && this.props.posts.data != prevProps.posts.data) {\n      this.setState({\n        posts: [...this.props.posts.data.posts]\n      });\n    }\n\n    if (this.props.deletePostResponse && this.props.deletePostResponse.data && this.props.deletePostResponse.data.success && this.props.deletePostResponse.data != prevProps.deletePostResponse.data) {\n      const {\n        deleteId\n      } = this.state;\n      this.setState({\n        posts: [...this.state.posts.filter(post => post._id != deleteId)],\n        deleteId: \"\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(PostContainer, {\n        children: this.state.posts.length > 0 ? this.state.posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(PostCard, {\n            handleDelete: this._deletePost,\n            data: post\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 16\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(Message, {\n          children: \"Share some memory to your wall\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 2\n    }, this);\n  }\n\n}\n\nconst Container = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n_c = Container;\nconst PostContainer = styled.div`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n_c2 = PostContainer;\nconst Button = styled.button`\n  border: none;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n`;\nconst Message = styled.h1`\n  color: #636e72;\n`;\n_c3 = Message;\n\nconst mapStateProps = state => {\n  return {\n    posts: state.dashboardFeed,\n    deletePostResponse: state.deletePost,\n    toggglePrivacy: state.togglePrivacy\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPosts: () => dispatch(getFeed()),\n    deletePost: params => dispatch(deletePost(params)),\n    getTogglePrivacy: params => dispatch(togglePrivacyPost(params))\n  };\n};\n\nexport default connect(mapStateProps, mapDispatchToProps)(Dashboard);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"PostContainer\");\n$RefreshReg$(_c3, \"Message\");","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/Components/Dashboard.tsx"],"names":["React","Component","styled","PostCard","connect","getFeed","togglePrivacyPost","deletePost","Dashboard","constructor","props","_deletePost","id","params","setState","deleteId","_togglePost","getTogglePrivacy","state","posts","componentDidMount","getPosts","componentDidUpdate","prevProps","data","deletePostResponse","success","filter","post","_id","render","length","map","Container","div","PostContainer","Button","button","Message","h1","mapStateProps","dashboardFeed","toggglePrivacy","togglePrivacy","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,SAASC,UAAT,QAA2B,uBAA3B;;;AAiBA,MAAMC,SAAN,SAAwBP,SAAxB,CAAgD;AAE9CQ,EAAAA,WAAW,CAACC,KAAD,EAAc;AACvB,UAAMA,KAAN;;AADuB,SA4BzBC,WA5ByB,GA4BVC,EAAD,IAAa;AACzB,YAAMC,MAAM,GAAG;AACbD,QAAAA;AADa,OAAf;AAGA,WAAKE,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEH;AADE,OAAd,EAEE,KAAKF,KAAL,CAAWH,UAAX,CAAsBM,MAAtB,CAFF;AAID,KApCwB;;AAAA,SAsCzBG,WAtCyB,GAsCVJ,EAAD,IAAc;AAC1B,YAAMC,MAAM,GAAG;AACbD,QAAAA;AADa,OAAf;AAGA,WAAKF,KAAL,CAAWO,gBAAX,CAA4BJ,MAA5B;AACD,KA3CwB;;AAEvB,SAAKK,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXJ,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDK,EAAAA,iBAAiB,GAAE;AACjB,SAAKV,KAAL,CAAWW,QAAX;AACD;;AAGDC,EAAAA,kBAAkB,CAACC,SAAD,EAAkB;AAClC,QAAG,KAAKb,KAAL,CAAWS,KAAX,IAAoB,KAAKT,KAAL,CAAWS,KAAX,CAAiBK,IAArC,IAA6C,KAAKd,KAAL,CAAWS,KAAX,CAAiBK,IAAjB,IAAyBD,SAAS,CAACJ,KAAV,CAAgBK,IAAzF,EAA+F;AAC7F,WAAKV,QAAL,CAAc;AACZK,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKT,KAAL,CAAWS,KAAX,CAAiBK,IAAjB,CAAsBL,KAA1B;AADK,OAAd;AAGD;;AACD,QAAG,KAAKT,KAAL,CAAWe,kBAAX,IAAiC,KAAKf,KAAL,CAAWe,kBAAX,CAA8BD,IAA/D,IAAuE,KAAKd,KAAL,CAAWe,kBAAX,CAA8BD,IAA9B,CAAmCE,OAA1G,IAAqH,KAAKhB,KAAL,CAAWe,kBAAX,CAA8BD,IAA9B,IAAsCD,SAAS,CAACE,kBAAV,CAA6BD,IAA3L,EAAgM;AAC9L,YAAM;AAAET,QAAAA;AAAF,UAAe,KAAKG,KAA1B;AACA,WAAKJ,QAAL,CAAc;AACZK,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,MAAjB,CAAyBC,IAAD,IAAcA,IAAI,CAACC,GAAL,IAAYd,QAAlD,CAAJ,CADK;AAEZA,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID;AACF;;AAmBDe,EAAAA,MAAM,GAAE;AAER,wBACD,QAAC,SAAD;AAAA,6BACG,QAAC,aAAD;AAAA,kBACG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBY,MAAjB,GAA0B,CAA1B,GAA+B,KAAKb,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAsBJ,IAAD,IAAwB;AAC3E,8BAAO,QAAC,QAAD;AAAU,YAAA,YAAY,EAAE,KAAKjB,WAA7B;AAAyD,YAAA,IAAI,EAAEiB;AAA/D,aAA+CA,IAAI,CAACC,GAApD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAF+B,CAA/B,gBAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHP;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADC;AASG;;AA1D2C;;AA6DhD,MAAMI,SAAS,GAAG/B,MAAM,CAACgC,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;AAON,MAAME,aAAa,GAAGjC,MAAM,CAACgC,GAAI;AACjC;AACA;AACA;AACA;AACA,CALA;MAAMC,a;AAON,MAAMC,MAAM,GAAGlC,MAAM,CAACmC,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMC,OAAO,GAAGpC,MAAM,CAACqC,EAAG;AAC1B;AACA,CAFA;MAAMD,O;;AAIN,MAAME,aAAa,GAAItB,KAAD,IAAoB;AACxC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACuB,aADR;AAELhB,IAAAA,kBAAkB,EAAEP,KAAK,CAACX,UAFrB;AAGLmC,IAAAA,cAAc,EAAExB,KAAK,CAACyB;AAHjB,GAAP;AAKD,CAND;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAyB;AAClD,SAAQ;AACNxB,IAAAA,QAAQ,EAAE,MAAKwB,QAAQ,CAAMxC,OAAO,EAAb,CADjB;AAENE,IAAAA,UAAU,EAAGM,MAAD,IAAiBgC,QAAQ,CAAMtC,UAAU,CAACM,MAAD,CAAhB,CAF/B;AAGNI,IAAAA,gBAAgB,EAAGJ,MAAD,IAAgBgC,QAAQ,CAAMvC,iBAAiB,CAACO,MAAD,CAAvB;AAHpC,GAAR;AAKD,CAND;;AAQA,eAAeT,OAAO,CAACoC,aAAD,EAAgBI,kBAAhB,CAAP,CAA2CpC,SAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\nimport { connect } from 'react-redux';\nimport { PostParamsType } from '../interfacesAndTypes/RequestParams';\nimport { AppDispatch, RootState } from '../store';\nimport { getFeed } from '../actions/feedAction';\nimport { togglePrivacyPost } from '../actions/feedAction';\n\nimport { deletePost } from '../actions/feedAction';\n\ntype Props = {\n  getPosts?: any,\n  posts?: any,\n  deletePost?: any,\n  deletePostResponse?: any\n  togglePrivacyPost?: any\n  getTogglePrivacy?: any\n}\n\ntype State = {\n  posts: any\n  deleteId: string\n}\n\n\nclass Dashboard extends Component<Props, State> {\n\n  constructor(props: Props){\n    super(props);\n    this.state = {\n      posts: [],\n      deleteId: \"\"\n    }\n  }\n\n  componentDidMount(){\n    this.props.getPosts();\n  }\n  \n\n  componentDidUpdate(prevProps: Props){\n    if(this.props.posts && this.props.posts.data && this.props.posts.data != prevProps.posts.data ){\n      this.setState({\n        posts: [...this.props.posts.data.posts]\n      })\n    }\n    if(this.props.deletePostResponse && this.props.deletePostResponse.data && this.props.deletePostResponse.data.success && this.props.deletePostResponse.data != prevProps.deletePostResponse.data){\n      const { deleteId } = this.state;\n      this.setState({\n        posts: [...this.state.posts.filter((post: any)=> post._id != deleteId)],\n        deleteId: \"\"\n      })\n    }\n  }\n\n  _deletePost = (id:string)=>{\n    const params = {\n      id\n    }\n    this.setState({\n      deleteId: id\n    },this.props.deletePost(params))\n    \n  }\n\n  _togglePost = (id: string)=>{\n    const params = {\n      id\n    }\n    this.props.getTogglePrivacy(params)\n  }\n\n  render(){\n    \n  return (\n\t<Container>\n    <PostContainer>\n      {this.state.posts.length > 0  ? this.state.posts.map((post: PostParamsType)=>{\n        return <PostCard handleDelete={this._deletePost} key={post._id} data={post}/>\n      }) : <Message>Share some memory to your wall</Message> }\n    </PostContainer>\n  </Container>\n  )\n    }\n}\n\nconst Container = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nconst PostContainer = styled.div`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`\n\nconst Button = styled.button`\n  border: none;\n\tpadding: 10px;\n\tbackground-color: #4834d4;\n\tcolor: #fff;\n\tfont-weight: 600;\n\tfont-size: 20px;\n\tborder-radius: 4px;\n\ttransition: all 0.1s linear;\n\t&:hover{\n\t\tbox-shadow: 5px 5px 20px #4834d4;\n\t}\n\tcursor: pointer;\n`\n\nconst Message = styled.h1`\n  color: #636e72;\n`\n\nconst mapStateProps = (state: RootState)=>{\n  return {\n    posts: state.dashboardFeed,\n    deletePostResponse: state.deletePost,\n    toggglePrivacy: state.togglePrivacy\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch: AppDispatch)=>{\n  return  {\n    getPosts: ()=> dispatch<any>(getFeed()),\n    deletePost: (params: any) => dispatch<any>(deletePost(params)),\n    getTogglePrivacy: (params:any) => dispatch<any>(togglePrivacyPost(params))\n  }\n}\n\nexport default connect(mapStateProps, mapDispatchToProps)(Dashboard)"]},"metadata":{},"sourceType":"module"}