{"ast":null,"code":"import axios from \"axios\";\nconst config = {\n  baseURL: \"http://localhost:5000/api/v1\"\n};\nconst instance = axios.create(config);\n\nconst makeRequest = (dispatch, reqObject, loadingAction, successAction, errorAction) => {\n  dispatch(loadingAction(true));\n  instance(reqObject).then(res => {\n    dispatch(successAction(res.data));\n  }).catch(error => {\n    dispatch(errorAction(error));\n  });\n};\n\nconst sendRequest = {\n  get: (dispatch, url, params, loadingAction, successAction, errorAction) => {\n    const headers = {\n      'Authorization': `Bearer ${localStorage.getItem('TOGGLE_AUTH_TOKEN')}`,\n      'Content-Type': \"application/json\"\n    };\n    let reqObj = {\n      url,\n      method: \"GET\",\n      headers: headers,\n      params: params\n    };\n    return makeRequest(dispatch, reqObj, loadingAction, successAction, errorAction);\n  },\n  post: (dispatch, url, params, loadingAction, successAction, errorAction) => {\n    const headers = {\n      'Authorization': `Bearer ${localStorage.getItem('TOGGLE_AUTH_TOKEN')}`,\n      'Content-Type': \"application/json\"\n    };\n    let reqObj = {\n      url,\n      method: \"POST\",\n      headers: headers,\n      params: params,\n      data: JSON.stringify(params)\n    };\n    makeRequest(dispatch, reqObj, loadingAction, successAction, errorAction);\n  }\n};\nexport { sendRequest };","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/services/index.ts"],"names":["axios","config","baseURL","instance","create","makeRequest","dispatch","reqObject","loadingAction","successAction","errorAction","then","res","data","catch","error","sendRequest","get","url","params","headers","localStorage","getItem","reqObj","method","post","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAyD,OAAzD;AAIA,MAAMC,MAA0B,GAAG;AAClCC,EAAAA,OAAO,EAAE;AADyB,CAAnC;AAIA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAaH,MAAb,CAAjB;;AAGA,MAAMI,WAAW,GAAG,CAACC,QAAD,EAA6BC,SAA7B,EAA2DC,aAA3D,EAAiGC,aAAjG,EAAuIC,WAAvI,KAA4K;AAC/LJ,EAAAA,QAAQ,CAAME,aAAa,CAAC,IAAD,CAAnB,CAAR;AACAL,EAAAA,QAAQ,CAACI,SAAD,CAAR,CAAoBI,IAApB,CAA0BC,GAAD,IAAsB;AAE/CN,IAAAA,QAAQ,CAAMG,aAAa,CAACG,GAAG,CAACC,IAAL,CAAnB,CAAR;AAEC,GAJD,EAIGC,KAJH,CAISC,KAAK,IAAE;AACfT,IAAAA,QAAQ,CAAMI,WAAW,CAACK,KAAD,CAAjB,CAAR;AACA,GAND;AAQA,CAVD;;AAYA,MAAMC,WAAW,GAAG;AACnBC,EAAAA,GAAG,EAAE,CAACX,QAAD,EAAwBY,GAAxB,EAAqCC,MAArC,EAAkDX,aAAlD,EAAwFC,aAAxF,EAA8HC,WAA9H,KAAoK;AACxK,UAAMU,OAAO,GAAG;AACf,uBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAA0C,EADtD;AAEf,sBAAgB;AAFD,KAAhB;AAIA,QAAIC,MAA0B,GAAG;AAChCL,MAAAA,GADgC;AAEhCM,MAAAA,MAAM,EAAE,KAFwB;AAGhCJ,MAAAA,OAAO,EAAEA,OAHuB;AAIhCD,MAAAA,MAAM,EAAEA;AAJwB,KAAjC;AAOA,WAAOd,WAAW,CAACC,QAAD,EAAWiB,MAAX,EAAmBf,aAAnB,EAAkCC,aAAlC,EAAiDC,WAAjD,CAAlB;AACA,GAdkB;AAenBe,EAAAA,IAAI,EAAE,CAACnB,QAAD,EAA6BY,GAA7B,EAA0CC,MAA1C,EAAuDX,aAAvD,EAA6FC,aAA7F,EAAmIC,WAAnI,KAAyK;AAC9K,UAAMU,OAAO,GAAG;AACf,uBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAA0C,EADtD;AAEf,sBAAgB;AAFD,KAAhB;AAIA,QAAIC,MAA0B,GAAG;AAChCL,MAAAA,GADgC;AAEhCM,MAAAA,MAAM,EAAE,MAFwB;AAGhCJ,MAAAA,OAAO,EAAEA,OAHuB;AAIhCD,MAAAA,MAAM,EAAEA,MAJwB;AAKhCN,MAAAA,IAAI,EAAEa,IAAI,CAACC,SAAL,CAAeR,MAAf;AAL0B,KAAjC;AAQAd,IAAAA,WAAW,CAACC,QAAD,EAAWiB,MAAX,EAAmBf,aAAnB,EAAkCC,aAAlC,EAAiDC,WAAjD,CAAX;AACA;AA7BkB,CAApB;AAgCA,SACCM,WADD","sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { ActionCreator, Action, Dispatch } from \"redux\";\nimport { AppDispatch } from \"../store\";\n\nconst config: AxiosRequestConfig = {\n\tbaseURL: \"http://localhost:5000/api/v1\"\n}\n\nconst instance = axios.create(config);\n\n\nconst makeRequest = (dispatch: Dispatch<Action>, reqObject: AxiosRequestConfig,loadingAction: ActionCreator<Action>, successAction: ActionCreator<Action>, errorAction: ActionCreator<Action>)=>{\n\tdispatch<any>(loadingAction(true))\n\tinstance(reqObject).then((res: AxiosResponse)=>{\n\n\tdispatch<any>(successAction(res.data))\n\n\t}).catch(error=>{\n\t\tdispatch<any>(errorAction(error))\n\t})\n\n}\n\nconst sendRequest = {\n\tget: (dispatch: AppDispatch, url: string, params: any, loadingAction: ActionCreator<Action>, successAction: ActionCreator<Action>, errorAction: ActionCreator<Action> )=>{\n\t\tconst headers = {\n\t\t\t'Authorization': `Bearer ${localStorage.getItem('TOGGLE_AUTH_TOKEN')}`,\n\t\t\t'Content-Type': \"application/json\"\n\t\t}\n\t\tlet reqObj: AxiosRequestConfig = {\n\t\t\turl,\n\t\t\tmethod: \"GET\",\n\t\t\theaders: headers,\n\t\t\tparams: params,\n\t\t}\n\n\t\treturn makeRequest(dispatch, reqObj, loadingAction, successAction, errorAction);\n\t},\n\tpost: (dispatch: Dispatch<Action>, url: string, params: any, loadingAction: ActionCreator<Action>, successAction: ActionCreator<Action>, errorAction: ActionCreator<Action> )=>{\n\t\tconst headers = {\n\t\t\t'Authorization': `Bearer ${localStorage.getItem('TOGGLE_AUTH_TOKEN')}`,\n\t\t\t'Content-Type': \"application/json\"\n\t\t}\n\t\tlet reqObj: AxiosRequestConfig = {\n\t\t\turl,\n\t\t\tmethod: \"POST\",\n\t\t\theaders: headers,\n\t\t\tparams: params,\n\t\t\tdata: JSON.stringify(params)\n\t\t}\n\n\t\tmakeRequest(dispatch, reqObj, loadingAction, successAction, errorAction);\n\t}\n}\n\nexport {\n\tsendRequest\n}"]},"metadata":{},"sourceType":"module"}