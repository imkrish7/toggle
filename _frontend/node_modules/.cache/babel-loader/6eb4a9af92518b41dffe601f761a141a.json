{"ast":null,"code":"var _jsxFileName = \"/home/rackham/dev/toggle/frontend/src/Context/AuthProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useMemo } from 'react';\nimport { AuthContext } from './AuthContext';\nimport { verifyOTP } from \"../actions/usersAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [login, setLogin] = useState(false);\n  const response = useSelector(state => state.loggedin);\n  const dispatch = useDispatch();\n\n  const signin = (params, callback) => {\n    dispatch(verifyOTP(params));\n  };\n\n  const signout = callback => {};\n\n  let loggedin = useMemo(() => {\n    if (localStorage.getItem(\"TOGGLE_AUTH_TOKEN\")) {\n      return true;\n    } else {\n      return false;\n    }\n  }, [login]);\n  let value = {\n    loggedin,\n    signin,\n    signout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 2\n  }, this);\n};\n\n_s(AuthProvider, \"/VprNc7GNWUDs2p+Kr7IZuNXusA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/rackham/dev/toggle/frontend/src/Context/AuthProvider.tsx"],"names":["useState","useMemo","AuthContext","verifyOTP","useSelector","useDispatch","AuthProvider","children","login","setLogin","response","state","loggedin","dispatch","signin","params","callback","signout","localStorage","getItem","value"],"mappings":";;;AAAA,SAAoBA,QAApB,EAA8BC,OAA9B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAAwC,eAAxC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAA+BC,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;;AAOA,OAAO,MAAMC,YAAY,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAU,KAAV,CAAlC;AACA,QAAMU,QAAyC,GAAGN,WAAW,CAACO,KAAK,IAAGA,KAAK,CAACC,QAAf,CAA7D;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,MAAM,GAAG,CAACC,MAAD,EAAqBC,QAArB,KAA+C;AAC5DH,IAAAA,QAAQ,CAAMV,SAAS,CAACY,MAAD,CAAf,CAAR;AACA,GAFF;;AAIC,QAAME,OAAO,GAAID,QAAD,IAA0B,CAEzC,CAFD;;AAGA,MAAIJ,QAAQ,GAAGX,OAAO,CAAC,MAAI;AACzB,QAAGiB,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAH,EAA6C;AAC3C,aAAO,IAAP;AACD,KAFD,MAEK;AACH,aAAO,KAAP;AACD;AACF,GANqB,EAMnB,CAACX,KAAD,CANmB,CAAtB;AAOA,MAAIY,KAAK,GAAG;AAAER,IAAAA,QAAF;AAAYE,IAAAA,MAAZ;AAAoBG,IAAAA;AAApB,GAAZ;AACD,sBACD,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA,cACEb;AADF;AAAA;AAAA;AAAA;AAAA,UADC;AAKD,CAxBM;;GAAMD,Y;UAEuCF,W,EACjCC,W;;;KAHNC,Y","sourcesContent":["import { ReactNode, useState, useMemo }from 'react'\nimport { AuthContext, ParamsType } from './AuthContext'\nimport { verifyOTP } from \"../actions/usersAction\"\nimport { TypedUseSelectorHook ,useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../store\"\n\ntype Props = {\n\tchildren: ReactNode\n}\n\nexport const AuthProvider = ({ children }: Props) => {\n  const [login, setLogin] = useState<boolean>(false) \n  const response: TypedUseSelectorHook<RootState> = useSelector(state=> state.loggedin);\n  const dispatch = useDispatch<AppDispatch>();\n  const signin = (params: ParamsType, callback: VoidFunction )=>{\n    dispatch<any>(verifyOTP(params))\n   }\n\n   const signout = (callback: VoidFunction)=>{\n\n   }\n   let loggedin = useMemo(()=>{\n     if(localStorage.getItem(\"TOGGLE_AUTH_TOKEN\")){\n       return true;\n     }else{\n       return false\n     }\n   }, [login])\n   let value = { loggedin, signin, signout }\n  return (\n\t<AuthContext.Provider value={value}>\n\t\t{children}\n\t</AuthContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}